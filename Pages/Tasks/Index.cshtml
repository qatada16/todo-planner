@page
@using TaskStatus = todo_planner.Models.TaskStatus;
@using todo_planner.Models
@model todo_planner.Pages.Tasks.IndexModel
@{
    ViewData["Title"] = "My Tasks";
}

<div class="max-w-6xl mx-auto">
    <!-- Header -->
    <div class="flex justify-between items-center mb-8">
        <div>
            <h1 class="text-3xl font-bold text-gray-800">My Tasks</h1>
            <p class="text-gray-600 mt-2">Manage your todo items</p>
        </div>
        <button onclick="openCreateModal()" 
                class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-semibold transition duration-200 transform hover:scale-105">
            <i class="fas fa-plus mr-2"></i>Add New Task
        </button>
    </div>

    <!-- Stats Cards -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
        <div class="bg-white rounded-xl shadow-md p-6 border-l-4 border-blue-500">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-gray-600 text-sm">Total Tasks</p>
                    <p class="text-3xl font-bold text-gray-800">@Model.TotalTasks</p>
                </div>
                <i class="fas fa-tasks text-blue-500 text-2xl"></i>
            </div>
        </div>

        <div class="bg-white rounded-xl shadow-md p-6 border-l-4 border-yellow-500">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-gray-600 text-sm">Pending</p>
                    <p class="text-3xl font-bold text-gray-800">@Model.PendingTasks</p>
                </div>
                <i class="fas fa-clock text-yellow-500 text-2xl"></i>
            </div>
        </div>

        <div class="bg-white rounded-xl shadow-md p-6 border-l-4 border-green-500">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-gray-600 text-sm">Completed</p>
                    <p class="text-3xl font-bold text-gray-800">@Model.CompletedTasks</p>
                </div>
                <i class="fas fa-check-circle text-green-500 text-2xl"></i>
            </div>
        </div>

        <div class="bg-white rounded-xl shadow-md p-6 border-l-4 border-red-500">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-gray-600 text-sm">Overdue</p>
                    <p class="text-3xl font-bold text-gray-800">@Model.OverdueTasks</p>
                </div>
                <i class="fas fa-exclamation-triangle text-red-500 text-2xl"></i>
            </div>
        </div>
    </div>

    <!-- Tasks Table -->
    <div class="bg-white rounded-xl shadow-lg overflow-hidden">
        <div class="overflow-x-auto">
            <table class="min-w-full">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-4 text-left text-sm font-semibold text-gray-700">Task</th>
                        <th class="px-6 py-4 text-left text-sm font-semibold text-gray-700">Due Date</th>
                        <th class="px-6 py-4 text-left text-sm font-semibold text-gray-700">Priority</th>
                        <th class="px-6 py-4 text-left text-sm font-semibold text-gray-700">Status</th>
                        <th class="px-6 py-4 text-left text-sm font-semibold text-gray-700">Actions</th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-gray-200">
                    @foreach (var task in Model.Tasks)
                    {
                        <tr class="hover:bg-gray-50 transition duration-150">
                            <td class="px-6 py-4">
                                <div>
                                    <p class="font-medium text-gray-800 @(task.Status == TaskStatus.Completed ? "line-through text-gray-500" : "")">
                                        @task.Title
                                    </p>
                                    <p class="text-sm text-gray-600 mt-1">@task.Description</p>
                                </div>
                            </td>
                            <td class="px-6 py-4">
                                <span class="text-sm @(task.IsOverdue && task.Status != TaskStatus.Completed ? "text-red-600 font-semibold" : "text-gray-600")">
                                    @task.DueDate.ToString("MMM dd, yyyy")
                                    @if (task.IsOverdue && task.Status != TaskStatus.Completed)
                                    {
                                        <i class="fas fa-exclamation-circle ml-1"></i>
                                    }
                                </span>
                            </td>
                            <td class="px-6 py-4">
                                @{
                                    var priorityClass = task.Priority switch
                                    {
                                        TaskPriority.Low => "bg-green-100 text-green-800",
                                        TaskPriority.Medium => "bg-yellow-100 text-yellow-800",
                                        TaskPriority.High => "bg-red-100 text-red-800",
                                        _ => "bg-gray-100 text-gray-800"
                                    };
                                    var priorityStars = task.Priority switch
                                    {
                                        TaskPriority.Low => "⭐",
                                        TaskPriority.Medium => "⭐⭐",
                                        TaskPriority.High => "⭐⭐⭐",
                                        _ => ""
                                    };
                                }
                                <span class="px-3 py-1 text-xs font-medium rounded-full @priorityClass">
                                    @priorityStars @task.Priority
                                </span>
                            </td>
                            <td class="px-6 py-4">
                                @{
                                    var statusClass = task.Status switch
                                    {
                                        TaskStatus.Pending => "bg-yellow-100 text-yellow-800",
                                        TaskStatus.InProgress => "bg-blue-100 text-blue-800",
                                        TaskStatus.Completed => "bg-green-100 text-green-800",
                                        _ => "bg-gray-100 text-gray-800"
                                    };
                                }
                                <span class="px-3 py-1 text-xs font-medium rounded-full @statusClass">
                                    @task.Status
                                </span>
                            </td>
                            <td class="px-6 py-4">
                                <div class="flex space-x-2">
                                    @if (task.Status != TaskStatus.Completed)
                                    {
                                        <form method="post" asp-page-handler="Complete" class="inline">
                                            <input type="hidden" name="id" value="@task.Id" />
                                            <button type="submit" class="text-green-600 hover:text-green-800 transition" title="Mark Complete">
                                                <i class="fas fa-check"></i>
                                            </button>
                                        </form>
                                    }
                                    <button onclick="openEditModal(@task.Id, '@task.Title', '@task.Description', '@task.DueDate.ToString("yyyy-MM-dd")', @((int)task.Priority), @((int)task.Status))" 
                                            class="text-blue-600 hover:text-blue-800 transition" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <form method="post" asp-page-handler="Delete" class="inline" onsubmit="return confirm('Are you sure you want to delete this task?');">
                                        <input type="hidden" name="id" value="@task.Id" />
                                        <button type="submit" class="text-red-600 hover:text-red-800 transition" title="Delete">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Empty State -->
    @if (!Model.Tasks.Any())
    {
        <div class="text-center py-12">
            <i class="fas fa-tasks text-gray-300 text-6xl mb-4"></i>
            <h3 class="text-xl font-semibold text-gray-600 mb-2">No tasks yet</h3>
            <p class="text-gray-500 mb-6">Get started by creating your first task!</p>
            <button onclick="openCreateModal()" 
                    class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-semibold transition">
                <i class="fas fa-plus mr-2"></i>Create Your First Task
            </button>
        </div>
    }
</div>

<!-- Create/Edit Task Modal -->
<div id="taskModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
    <div class="bg-white rounded-2xl p-8 w-full max-w-md mx-4">
        <h2 id="modalTitle" class="text-2xl font-bold text-gray-800 mb-6">Add New Task</h2>
        
        <form method="post" id="taskForm">
            <input type="hidden" id="taskId" name="Id" value="0" />
            
            <div class="space-y-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Title</label>
                    <input type="text" id="taskTitle" name="Title" 
                           class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                           placeholder="What needs to be done?" required>
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Description</label>
                    <textarea id="taskDescription" name="Description" rows="3"
                              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                              placeholder="Add details..."></textarea>
                </div>

                <div class="grid grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Due Date</label>
                        <input type="date" id="taskDueDate" name="DueDate" 
                               class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                               required>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Priority</label>
                        <select id="taskPriority" name="Priority" 
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                            <option value="1">⭐ Low</option>
                            <option value="2">⭐⭐ Medium</option>
                            <option value="3">⭐⭐⭐ High</option>
                        </select>
                    </div>
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Status</label>
                    <select id="taskStatus" name="Status" 
                            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                        <option value="1">Pending</option>
                        <option value="2">In Progress</option>
                        <option value="3">Completed</option>
                    </select>
                </div>
            </div>

            <div class="flex space-x-4 mt-8">
                <button type="button" onclick="closeModal()" 
                        class="flex-1 bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-3 px-6 rounded-lg transition">
                    Cancel
                </button>
                <button type="submit" 
                        class="flex-1 bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-lg transition">
                    Save Task
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        function openCreateModal() {
            document.getElementById('modalTitle').textContent = 'Add New Task';
            document.getElementById('taskId').value = '0';
            document.getElementById('taskTitle').value = '';
            document.getElementById('taskDescription').value = '';
            document.getElementById('taskDueDate').value = '';
            document.getElementById('taskPriority').value = '2';
            document.getElementById('taskStatus').value = '1';
            document.getElementById('taskModal').classList.remove('hidden');
        }

        function openEditModal(id, title, description, dueDate, priority, status) {
            document.getElementById('modalTitle').textContent = 'Edit Task';
            document.getElementById('taskId').value = id;
            document.getElementById('taskTitle').value = title;
            document.getElementById('taskDescription').value = description;
            document.getElementById('taskDueDate').value = dueDate;
            document.getElementById('taskPriority').value = priority;
            document.getElementById('taskStatus').value = status;
            document.getElementById('taskModal').classList.remove('hidden');
        }

        function closeModal() {
            document.getElementById('taskModal').classList.add('hidden');
        }

        // Close modal when clicking outside
        document.getElementById('taskModal').addEventListener('click', function(e) {
            if (e.target.id === 'taskModal') {
                closeModal();
            }
        });
    </script>
}